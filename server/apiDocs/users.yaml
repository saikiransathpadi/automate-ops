paths:
  /dashboard/user:                # path of the user from your endpoint
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: Get Users List
      produces:
      - application/json
      responses:          # server responses
        200:
          description: An object with user details and ui messages
        401:
          description: Unauthorized
        400:
          description: Bad request
        500:
          description: Unexpected Error
      security:
        - Authorization: []

  /dashboard/user/{userId}:                # path of the user from your endpoint
    put:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: update user profile data
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: update user     # name of request, can be any name
        description: user's data that needs to be updated
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/User'
      - in: path
        name: userId   # Note the name is the same as in the path
        description: users uuid
        required: true
        schema:
          type: string
      responses:          # server responses
        200:
          description: successfully updated the user data
        401:
          description: Unauthorized
        400:
          description: Bad request
        500:
          description: Unexpected Error
      security:
        - Authorization: []

definitions:        # Schema defination for request body
  User:
    type: object
    properties:
      mobile:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      isEmailVerified:
        type: boolean
      linkedInProfile: 
        type: string
      githubHubProfile: 
        type: string
      profileImage: 
        type: string
      role: 
        type: string
      permissions:
        type: array
        items: 
          type: string
      

securityDefinitions:
  Authorization:
    type: apiKey
    name: authorization
    in: header
    description: Authentication token
