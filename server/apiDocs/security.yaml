paths:
  /dashboard/user/login:
    post:
      tags:
        - Security
      summary: user login
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: login     # name of request, can be any name
        description: It enables a user to login into account
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/logIn' 
      responses:          # server responses
        200:
          description: An object with auth token and ui messages
        401:
          description: Unauthorized
        400:
          description: Bad request
        500:
          description: Unexpected Error
  
  /dashboard/user/signup:
    post:
      tags:
        - Security
      summary: user signup
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: login     # name of request, can be any name
        description: It enables a user to signup and create an account
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/signUp' 
      responses:          # server responses
        200:
          description: An object with user details created and ui messages
        401:
          description: Unauthorized
        400:
          description: Bad request
        500:
          description: Unexpected Error
  
  /dashboard/otp/email:
    put:
      tags:
        - OTP
      summary: send otp to user
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: send otp     # name of request, can be any name
        description: sending otp to users email
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          type: object
          properties:
            email:
              type: string
              required: true
            source:
              type: string
              required: true
      responses:          # server responses
        200:
          description: An object with otp id
        401:
          description: Unauthorized
        400:
          description: Bad request
        500:
          description: Unexpected Error

    post:
      tags:
        - OTP
      summary: validate otp
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: validate otp     # name of request, can be any name
        description: validating otp send to user
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          type: object
          properties:
            email:
              type: string
              required: true
            otpId:
              type: string
              required: true
            otp:
              oneOf:
                - type: string
                - type: integer
              required: true
      responses:          # server responses
        200:
          description: verification success
        401:
          description: Unauthorized
        400:
          description: Otp incorrect or expired
        500:
          description: Unexpected Error

  /dashboard/user/forgot/password:
    post:
      tags:
        - Security
      summary: forgot password
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: login     # name of request, can be any name
        description: validates otp and updates new password
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          type: object
          properties:
            email:
              type: string
              required: true
            otpId:
              type: string
              required: true
            otp:
              oneOf:
                - type: string
                - type: integer
              required: true
            newPassword:
              type: string
              required: true
      responses:          # server responses
        200:
          description: An object with user details created and ui messages
        401:
          description: Unauthorized
        400:
          description: Bad request
        500:
          description: Unexpected Error
  
  /dashboard/user/reset/password:
    post:
      tags:
        - Security
      summary: update password
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: login     # name of request, can be any name
        description: update password
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          type: object
          properties:
            email:
              type: string
              required: true
            password:
              type: string
              required: true
            newPassword:
              type: string
              required: true
      responses:          # server responses
        200:
          description: update successful
        401:
          description: Unauthorized
        400:
          description: Incorrect or invalid password
        500:
          description: Unexpected Error
      security:
        - Authorization: []
   
definitions:        # Schema defination for request body
  signUp:
    type: object
    properties:
      mobile:
        type: string
        required: true
      email:
        type: string
        required: true
      password:
        type: string
        required: true
      firstName:
        type: string
        required: true
      lastName:
        type: string
        required: true
  
  logIn:
    type: object
    properties:
      mobile:
        type: string
        required: true
      password:
        type: string
        required: true

securityDefinitions:
  Authorization:
    type: apiKey
    name: authorization
    in: header
    description: Authentication token